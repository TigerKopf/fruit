# my-custom.conf
# Diese Konfigurationsdatei wird in das Apache-Verzeichnis kopiert und aktiviert.

<IfModule mod_rewrite.c>
    RewriteEngine On

    # === 404-Fehlerbehandlung ===
    # Leite alle 404-Fehler auf die Seite /404.html im Webroot um.
    # Stelle sicher, dass du eine Datei namens 404.html in deinem ./src_meins/ Verzeichnis hast.
    ErrorDocument 404 /404.html

    # === Dateierweiterungen verbergen ===
    # Diese Regeln ermöglichen es, dass URLs ohne Dateierweiterung auf die entsprechenden
    # PHP- oder HTML-Dateien verweisen.

    # 1. Wenn die Anfrage nicht auf eine existierende Datei (!-f) oder ein Verzeichnis (!-d) verweist,
    #    aber eine Datei mit angehängter .php-Erweiterung existiert, schreibe die URL intern um.
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME}.php -f
    RewriteRule ^(.*)$ $1.php [L]

    # 2. Wenn die obige .php-Regel nicht zutraf und eine Datei mit angehängter .html-Erweiterung existiert,
    #    schreibe die URL intern um.
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME}.html -f
    RewriteRule ^(.*)$ $1.html [L]

    # === Kanonische URLs erzwingen (Optional: Entfernt explizite Dateierweiterungen in der URL) ===
    # Diese Regeln leiten Benutzer, die eine URL mit expliziter Dateierweiterung eingeben,
    # auf die Version ohne Erweiterung um (HTTP 301 Permanent Redirect).
    # Dies ist gut für SEO, um doppelte Inhalte zu vermeiden.

    # 3. Wenn die angefragte URL eine .php-Erweiterung enthält, leite auf die Version ohne .php um.
    RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /([^.]+)\.php(\?[^\ ]*)?\ HTTP/
    RewriteRule ^([^.]+)\.php$ /$1 [R=301,L]

    # 4. Wenn die angefragte URL eine .html-Erweiterung enthält, leite auf die Version ohne .html um.
    RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /([^.]+)\.html(\?[^\ ]*)?\ HTTP/
    RewriteRule ^([^.]+)\.html$ /$1 [R=301,L]

</IfModule>

# /etc/apache2/conf-available/my-custom.conf

# Standard DocumentRoot, sollte mit Dockerfile übereinstimmen
<Directory /var/www/html>
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>

# Browser-Caching für statische Dateien (Bilder, CSS, JS)
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType image/avif "access plus 1 month"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresDefault "access plus 2 days"
</IfModule>

# Gzip-Komprimierung für Textdateien
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/vnd.api+json
</IfModule>